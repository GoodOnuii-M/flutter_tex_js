import 'package:flutter/services.dart';
import 'package:flutter_tex_js_platform_interface/flutter_tex_js_platform_interface.dart';

class TexRendererMacOS extends TexRendererPlatform {
  /// The method channel used to interact with the native platform.
  static const MethodChannel _channel = MethodChannel('flutter_tex_js');

  /// Registers this class as the default instance of [TexRendererPlatform]
  static void registerWith() =>
      TexRendererPlatform.instance = TexRendererMacOS();

  /// Render the specified [text] to a PNG binary suitable for display with
  /// [Image.memory].
  @override
  Future<Uint8List> render(
    String text, {
    required String requestId,
    required bool displayMode,
    required String color,
    required double fontSize,
    required double maxWidth,
  }) async {
    return Uint8List.fromList([
      137,
      80,
      78,
      71,
      13,
      10,
      26,
      10,
      0,
      0,
      0,
      13,
      73,
      72,
      68,
      82,
      0,
      0,
      0,
      144,
      0,
      0,
      0,
      95,
      8,
      6,
      0,
      0,
      0,
      7,
      248,
      78,
      217,
      0,
      0,
      0,
      1,
      115,
      82,
      71,
      66,
      0,
      174,
      206,
      28,
      233,
      0,
      0,
      0,
      4,
      115,
      66,
      73,
      84,
      8,
      8,
      8,
      8,
      124,
      8,
      100,
      136,
      0,
      0,
      12,
      26,
      73,
      68,
      65,
      84,
      120,
      156,
      237,
      157,
      123,
      176,
      85,
      85,
      29,
      199,
      63,
      247,
      242,
      206,
      123,
      189,
      118,
      21,
      229,
      2,
      138,
      128,
      162,
      4,
      98,
      16,
      33,
      38,
      41,
      169,
      208,
      67,
      172,
      172,
      160,
      48,
      43,
      155,
      138,
      94,
      150,
      141,
      86,
      67,
      79,
      73,
      106,
      12,
      31,
      61,
      24,
      24,
      205,
      102,
      44,
      117,
      164,
      32,
      165,
      44,
      208,
      76,
      52,
      18,
      84,
      82,
      115,
      196,
      76,
      20,
      11,
      115,
      48,
      30,
      6,
      40,
      175,
      120,
      75,
      127,
      124,
      207,
      158,
      123,
      246,
      58,
      107,
      157,
      199,
      94,
      123,
      159,
      115,
      238,
      189,
      235,
      51,
      115,
      231,
      114,
      214,
      62,
      103,
      237,
      125,
    ]);

    // await _channel.invokeMethod<Uint8List>('render', {
    //   'requestId': requestId,
    //   'text': text,
    //   'displayMode': displayMode,
    //   'color': color,
    //   'fontSize': fontSize,
    //   'maxWidth': maxWidth,
    // }) as Uint8List;
  }

  /// Cancel the in-flight [render] request identified by [requestId].
  @override
  Future<void> cancel(String requestId) async {
    return;
    // return _channel.invokeMethod<void>('cancel', {
    //   'requestId': requestId,
    // });
  }
}
